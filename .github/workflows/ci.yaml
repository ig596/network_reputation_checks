name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          pip install poetry
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry install --with dev
      - name: Run tests with coverage
        continue-on-error: true
        run: |
          poetry run pytest --cov=network_reputation_check --cov-report=xml --cov-report=term
      - name: Generate and Commit Coverage Badge
        if: github.ref == 'refs/heads/main'
        run: |
          poetry run genbadge coverage -i coverage.xml -o coverage.svg
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add coverage.svg
          git diff --cached --quiet || git commit -m "docs: Update coverage badge [ci skip]"
          git push || echo "No changes to push"
  commit-validation:
    runs-on: ubuntu-latest
    steps:
      - name: Check signed commits in PR
        uses: 1Password/check-signed-commits-action@v1
      - name: Conventional Commitlint
        uses: opensource-nepal/commitlint@v1


  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          pip install poetry
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry install --with dev
      - name: Run pre-commit hooks
        continue-on-error: true
        run: |
          poetry run pre-commit run --all-files || echo "Pre-commit hooks modified files."
      - name: Commit changes made by pre-commit hooks
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git diff --cached --quiet || git commit -m "Apply pre-commit fixes [ci skip]"
          git push || echo "No changes to push"
      - name: Handle pre-commit failures
        if: failure()
        run: echo "Pre-commit hooks modified files, but changes were committed successfully."


  validate-docker:
    permissions:
      contents: read  # Restrict permissions to read-only
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Validate build configuration
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: true
        with:
          call: check
