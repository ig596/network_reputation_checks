name: Release Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write  # Required for creating releases
  issues: write
  pull-requests: write
  statuses: write
  checks: write
  id-token: write  # Required for generating build attestations

concurrency:
  group: release-workflow
  cancel-in-progress: true

jobs:
  semantic-release:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install Dependencies
        run: |
          pip install poetry
          poetry install --with dev
      - name: Configure Git for semantic-release
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global commit.gpgsign false  # Disable signing for automated commits
      - name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@v10.0.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          changelog: true  # Generate changelog
          vcs_release: true  # Create a release on GitHub
          tag: true  # Tag the release
          push: true  # Push changes back to the repository
          commit: true  # Commit changes
          build: false  # Skip build in semantic-release since we'll do it separately


  sbom-generation:
    needs: semantic-release  # Ensure this runs after the semantic-release job
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          path: .  # Generate SBOM for the entire repository
          artifact-name: sbom.spdx.json  # Name of the generated SBOM file
          format: spdx-json  # Use SPDX format for SBOM
          dependency-snapshot: true  # Include dependency snapshot

  publish:
    needs: semantic-release
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref_name }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          pip install poetry
          poetry install --with dev
      - name: Build package
        run: |
          poetry build
      - name: Publish to TestPyPI
        env:
          POETRY_PYPI_TOKEN_TESTPYPI: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry publish --repository testpypi
